{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stella\\\\Documents\\\\diplomski\\\\web2\\\\loto app\\\\frontend\\\\src\\\\home\\\\TicketInfo.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicketInfo() {\n  //   const { ticketId } = useParams();\n  //   const [ticket, setTicket] = useState(null);\n  //   const [loading, setLoading] = useState(true);\n  //   const [roundInfo, setRoundInfo] = useState(null);\n\n  //   useEffect(() => {\n  //     const fetchTicket = async () => {\n  //       try {\n  //         const res = await axios.get(http://localthost:4000/ticket/${ticketId});\n  //         setTicket(res.data);\n  //         const resround = await axios.get(\"https://loto-app-vtn4.onrender.com/current-round\");\n  //         setRoundInfo(resround.data);\n  //       } catch (err) {\n  //         console.error(\"Greška pri dohvaćanju listića:\", err);\n  //       } finally {\n  //         setLoading(false);\n  //       }\n  //     };\n  //     fetchTicket();\n  //   }, [ticketId]);\n\n  //   if (loading) return <p>Učitavanje...</p>;\n\n  //   if (!ticket) return <p>Listić nije pronađen.</p>;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Detalji listi\\u0107a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = TicketInfo;\nexport default TicketInfo;\nvar _c;\n$RefreshReg$(_c, \"TicketInfo\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","TicketInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Stella/Documents/diplomski/web2/loto app/frontend/src/home/TicketInfo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction TicketInfo() {\r\n//   const { ticketId } = useParams();\r\n//   const [ticket, setTicket] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [roundInfo, setRoundInfo] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchTicket = async () => {\r\n//       try {\r\n//         const res = await axios.get(http://localthost:4000/ticket/${ticketId});\r\n//         setTicket(res.data);\r\n//         const resround = await axios.get(\"https://loto-app-vtn4.onrender.com/current-round\");\r\n//         setRoundInfo(resround.data);\r\n//       } catch (err) {\r\n//         console.error(\"Greška pri dohvaćanju listića:\", err);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n//     fetchTicket();\r\n//   }, [ticketId]);\r\n\r\n//   if (loading) return <p>Učitavanje...</p>;\r\n\r\n//   if (!ticket) return <p>Listić nije pronađen.</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Detalji listića</h2>\r\n      {/* <p><strong>UUID:</strong> {ticket.id}</p>\r\n      <p><strong>Osobna iskaznica:</strong> {ticket.personal_id}</p>\r\n      <p><strong>Brojevi:</strong> {ticket.numbers.join(\", \")}</p>\r\n      {roundInfo && roundInfo.drawnNumbers ? (\r\n        <p><strong>Izvučeni brojevi:</strong> {roundInfo.drawnNumbers.join(\", \")}</p>\r\n      ) : (\r\n        <p>Brojevi još nisu izvučeni.</p>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TicketInfo;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EACtB;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEE,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA;MAAAE,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASrB,CAAC;AAEV;AAACC,EAAA,GAvCQN,UAAU;AAyCnB,eAAeA,UAAU;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}